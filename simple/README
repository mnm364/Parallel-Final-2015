Michael Miller
Christian Reotutar

This is the final project for Parallel Programming (600.420) Spring 2015.

Our goal for this project was to find the parallelism possible from
the Intel ISPC Program Compiler available in a lower-level functional
units instead of parallelism through cores (OpenMP) and machines (MPI).

The following files are contained within this submission:
    simple.cpp : Driver class with serial implementation of our tests
    simple.ispc : ISPC parallelized implementation of our tests
    random.cpp : Creates random numbers in a text file
    io/rand01.txt : 1,000,000 random numbers
    io/rand02.txt : 1,000,000 different random numbers
    makefile : makefile

Our project depends on the ISPC library. We have included it in the tar.
In order to run our project run the following commands
    make : compile the simple program to test times and speedup
    make serial : compile the serial program with O3 optimizations
    make clean : clean
    make disa : a special surprise
    ./simple 1000 : run the simple program with a high enough number 
        of iterations for reliability
    ./serial 1000 : run the optimized serial program with a high enough
        number of iterations for reliability

DEPENDENCY:
	there is a dependency on the ispc executable, but is included in the submission for linux systems. The makefile should take care of everything!
